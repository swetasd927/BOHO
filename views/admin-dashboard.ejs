<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Premium Bag Shop - Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.1.0/fonts/remixicon.css" rel="stylesheet"/>
    <style>
        .modal-overlay {
            backdrop-filter: blur(12px);
            background: rgba(0, 0, 0, 0.6);
        }
        .modal-content {
            transform: translateY(-30px) scale(0.95);
            opacity: 0;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
        .modal-content.show {
            transform: translateY(0) scale(1);
            opacity: 1;
        }
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .stats-card-2 {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        }
        .stats-card-3 {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }
        .stats-card-4 {
            background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
        }
        .product-image {
            object-fit: cover;
            border-radius: 8px;
        }
        .action-button {
            transition: all 0.3s ease;
        }
        .action-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        .form-input {
            transition: all 0.3s ease;
            border: 2px solid #e5e7eb;
        }
        .form-input:focus {
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            transform: translateY(-1px);
        }
        .form-label {
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            display: block;
        }
        .modal-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 12px 12px 0 0;
        }
        .btn-primary {
            background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);
            transform: translateY(-1px);
            box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
        }
        .btn-secondary {
            background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
            transition: all 0.3s ease;
        }
        .btn-secondary:hover {
            background: linear-gradient(135deg, #4b5563 0%, #374151 100%);
            transform: translateY(-1px);
            box-shadow: 0 8px 25px rgba(107, 114, 128, 0.3);
        }
        .input-group {
            margin-bottom: 20px;
        }
        .modal-body {
            padding: 32px;
            background: #fafafa;
        }
    </style>
</head>
<body class="bg-gray-50 font-sans">
    <!-- Header -->
    <header class="bg-white shadow-md border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-4">
                    <i class="ri-shopping-bag-3-fill text-3xl text-blue-600"></i>
                    <h1 class="text-2xl font-bold text-gray-800">Admin Dashboard</h1>
                </div>
                <div class="flex items-center space-x-4">
                    <span class="text-gray-600">Welcome, Admin</span>
                    <a href="/owners/logout" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors">
                        <i class="ri-logout-circle-line mr-2"></i>Logout
                    </a>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Statistics Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div class="stats-card text-white p-6 rounded-xl shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-blue-100">Total Products</p>
                        <h3 class="text-3xl font-bold"><%= products.length %></h3>
                    </div>
                    <i class="ri-shopping-bag-line text-4xl text-blue-100"></i>
                </div>
            </div>
            
            <div class="stats-card-2 text-white p-6 rounded-xl shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-pink-100">Categories</p>
                        <h3 class="text-3xl font-bold"><%= [...new Set(products.map(p => p.category))].length %></h3>
                    </div>
                    <i class="ri-price-tag-3-line text-4xl text-pink-100"></i>
                </div>
            </div>
            
            <div class="stats-card-3 text-white p-6 rounded-xl shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-cyan-100">In Stock</p>
                        <h3 class="text-3xl font-bold"><%= products.filter(p => p.quantity > 0).length %></h3>
                    </div>
                    <i class="ri-box-3-line text-4xl text-cyan-100"></i>
                </div>
            </div>
            
            <div class="stats-card-4 text-white p-6 rounded-xl shadow-lg">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-green-100">Total Value</p>
                        <h3 class="text-3xl font-bold"><%= products.reduce((sum, p) => sum + (p.price * p.quantity), 0).toLocaleString() %></h3>
                    </div>
                    <i class="ri-money-dollar-circle-line text-4xl text-green-100"></i>
                </div>
            </div>
        </div>

        <!-- Products Section -->
        <div class="bg-white rounded-xl shadow-lg">
            <div class="p-6 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h2 class="text-2xl font-bold text-gray-800">Product Management</h2>
                    <a href="/owners/product/create" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors action-button">
                        <i class="ri-add-line mr-2"></i>Add New Product
                    </a>
                </div>
            </div>

            <div class="p-6">
                <% if (products.length === 0) { %>
                    <div class="text-center py-12">
                        <i class="ri-inbox-line text-6xl text-gray-300 mb-4"></i>
                        <h3 class="text-xl text-gray-500 mb-2">No products found</h3>
                        <p class="text-gray-400">Start by adding your first product</p>
                    </div>
                <% } else { %>
                    <div class="overflow-x-auto">
                        <table class="w-full">
                            <thead>
                                <tr class="border-b border-gray-200">
                                    <th class="text-left py-4 px-2 font-semibold text-gray-700">Image</th>
                                    <th class="text-left py-4 px-2 font-semibold text-gray-700">Product Name</th>
                                    <th class="text-left py-4 px-2 font-semibold text-gray-700">Category</th>
                                    <th class="text-left py-4 px-2 font-semibold text-gray-700">Price</th>
                                    <th class="text-left py-4 px-2 font-semibold text-gray-700">Quantity</th>
                                    <th class="text-left py-4 px-2 font-semibold text-gray-700">Status</th>
                                    <th class="text-center py-4 px-2 font-semibold text-gray-700">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% products.forEach(product => { %>
                                    <tr class="border-b border-gray-100 hover:bg-gray-50 transition-colors">
                                        <td class="py-4 px-2">
                                            <img src="data:image/jpeg;base64,<%= product.image %>" 
                                                 alt="<%= product.name %>" 
                                                 class="w-16 h-16 product-image">
                                        </td>
                                        <td class="py-4 px-2">
                                            <h4 class="font-semibold text-gray-800"><%= product.name %></h4>
                                            <p class="text-sm text-gray-500 truncate max-w-xs"><%= product.description %></p>
                                        </td>
                                        <td class="py-4 px-2">
                                            <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                                                <%= product.category %>
                                            </span>
                                        </td>
                                        <td class="py-4 px-2">
                                            <span class="font-semibold text-green-600"><%= product.price.toLocaleString() %></span>
                                            <% if (product.discount > 0) { %>
                                                <span class="text-xs text-red-500 block"><%= product.discount %>% off</span>
                                            <% } %>
                                        </td>
                                        <td class="py-4 px-2">
                                            <span class="<%= product.quantity > 0 ? 'text-green-600' : 'text-red-600' %> font-semibold">
                                                <%= product.quantity %>
                                            </span>
                                        </td>
                                        <td class="py-4 px-2">
                                            <% if (product.quantity > 0) { %>
                                                <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">
                                                    <i class="ri-check-line mr-1"></i>In Stock
                                                </span>
                                            <% } else { %>
                                                <span class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-sm font-medium">
                                                    <i class="ri-close-line mr-1"></i>Out of Stock
                                                </span>
                                            <% } %>
                                        </td>
                                        <td class="py-4 px-2 text-center">
                                            <div class="flex justify-center space-x-2">
                                                <button onclick="openEditModal('<%= product._id %>')" 
                                                        class="bg-yellow-500 text-white px-3 py-2 rounded-lg hover:bg-yellow-600 transition-colors action-button">
                                                    <i class="ri-edit-line"></i>
                                                </button>
                                                <button onclick="deleteProduct('<%= product._id %>')" 
                                                        class="bg-red-500 text-white px-3 py-2 rounded-lg hover:bg-red-600 transition-colors action-button">
                                                    <i class="ri-delete-bin-line"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                <% } %>
            </div>
        </div>
    </main>

    <!-- Edit Product Modal -->
    <div id="editModal" class="hidden fixed inset-0 z-50 modal-overlay">
        <div class="flex items-center justify-center min-h-screen px-4">
            <div class="bg-white rounded-2xl shadow-2xl max-w-lg w-full modal-content overflow-hidden">
                <div class="modal-header p-6">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center space-x-3">
                            <i class="ri-edit-box-line text-2xl"></i>
                            <h3 class="text-xl font-bold">Edit Product</h3>
                        </div>
                        <button type="button" onclick="closeEditModal()" class="text-white hover:bg-white hover:bg-opacity-20 rounded-full p-2 transition-colors">
                            <i class="ri-close-line text-xl"></i>
                        </button>
                    </div>
                </div>
                <form id="editForm" class="modal-body">
                    <input type="hidden" id="editProductId">
                    
                    <!-- Row 1: Name and Price -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="input-group">
                            <label class="form-label">
                                <i class="ri-shopping-bag-line mr-2"></i>Product Name
                            </label>
                            <input type="text" id="editName" class="form-input w-full px-4 py-3 rounded-xl outline-none" placeholder="Enter product name" required>
                        </div>
                        
                        <div class="input-group">
                            <label class="form-label">
                                <i class="ri-money-dollar-circle-line mr-2"></i>Price (₹)
                            </label>
                            <input type="number" id="editPrice" class="form-input w-full px-4 py-3 rounded-xl outline-none" placeholder="0.00" required>
                        </div>
                    </div>
                    
                    <!-- Row 2: Quantity and Category -->
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="input-group">
                            <label class="form-label">
                                <i class="ri-stack-line mr-2"></i>Quantity
                            </label>
                            <input type="number" id="editQuantity" class="form-input w-full px-4 py-3 rounded-xl outline-none" placeholder="0" required>
                        </div>
                        
                        <div class="input-group">
                            <label class="form-label">
                                <i class="ri-price-tag-3-line mr-2"></i>Category
                            </label>
                            <select id="editCategory" class="form-input w-full px-4 py-3 rounded-xl outline-none" required>
                                <option value="">Choose category</option>
                                <option value="handbags">👜 Handbags</option>
                                <option value="backpacks">🎒 Backpacks</option>
                                <option value="wallets">👛 Wallets</option>
                                <option value="travel">🧳 Travel Bags</option>
                                <option value="accessories">✨ Accessories</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Row 3: Discount -->
                    <div class="input-group">
                        <label class="form-label">
                            <i class="ri-percent-line mr-2"></i>Discount (%)
                        </label>
                        <input type="number" id="editDiscount" min="0" max="100" class="form-input w-full px-4 py-3 rounded-xl outline-none" placeholder="0">
                    </div>
                    
                    <!-- Row 4: Description -->
                    <div class="input-group">
                        <label class="form-label">
                            <i class="ri-file-text-line mr-2"></i>Description
                        </label>
                        <textarea id="editDescription" rows="4" class="form-input w-full px-4 py-3 rounded-xl outline-none resize-none" placeholder="Enter product description..."></textarea>
                    </div>
                    
                    <!-- Action Buttons -->
                    <div class="flex space-x-4 pt-6 border-t border-gray-200">
                        <button type="submit" class="btn-primary flex-1 text-white py-4 px-6 rounded-xl font-semibold shadow-lg">
                            <i class="ri-save-line mr-2"></i>Update Product
                        </button>
                        <button type="button" onclick="closeEditModal()" class="btn-secondary flex-1 text-white py-4 px-6 rounded-xl font-semibold shadow-lg">
                            <i class="ri-close-line mr-2"></i>Cancel
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Edit Product Modal Functions
        function openEditModal(productId) {
            // Find product data from the rendered products
            const products = <%-JSON.stringify(products)%>;
            const product = products.find(p => p._id === productId);
            
            if (product) {
                document.getElementById('editProductId').value = product._id;
                document.getElementById('editName').value = product.name;
                document.getElementById('editPrice').value = product.price;
                document.getElementById('editQuantity').value = product.quantity;
                document.getElementById('editCategory').value = product.category;
                document.getElementById('editDiscount').value = product.discount || 0;
                document.getElementById('editDescription').value = product.description;
                
                const modal = document.getElementById('editModal');
                const modalContent = modal.querySelector('.modal-content');
                modal.classList.remove('hidden');
                setTimeout(() => modalContent.classList.add('show'), 10);
            }
        }

        function closeEditModal() {
            const modal = document.getElementById('editModal');
            const modalContent = modal.querySelector('.modal-content');
            modalContent.classList.remove('show');
            setTimeout(() => modal.classList.add('hidden'), 300);
        }

        // Edit form submission
        document.getElementById('editForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const productId = document.getElementById('editProductId').value;
            const formData = new FormData();
            formData.append('name', document.getElementById('editName').value);
            formData.append('price', document.getElementById('editPrice').value);
            formData.append('quantity', document.getElementById('editQuantity').value);
            formData.append('category', document.getElementById('editCategory').value);
            formData.append('discount', document.getElementById('editDiscount').value);
            formData.append('description', document.getElementById('editDescription').value);

            try {
                const response = await fetch(`/products/edit/${productId}`, {
                    method: 'POST',
                    credentials: 'include',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    alert('Product updated successfully!');
                    location.reload();
                } else {
                    alert('Error updating product: ' + (data.message || 'Unknown error'));
                }
            } catch (error) {
                console.error('Error updating product:', error);
                alert('Error updating product. Please try again.');
            }
        });

        // Delete product function
        async function deleteProduct(productId) {
            if (confirm('Are you sure you want to delete this product? This action cannot be undone.')) {
                try {
                    const response = await fetch(`/products/delete/${productId}`, {
                        method: 'POST',
                        credentials: 'include'
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        alert('Product deleted successfully!');
                        location.reload();
                    } else {
                        alert('Error deleting product: ' + (data.message || 'Unknown error'));
                    }
                } catch (error) {
                    console.error('Error deleting product:', error);
                    alert('Error deleting product. Please try again.');
                }
            }
        }

        // Close modal when clicking outside
        document.getElementById('editModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeEditModal();
            }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeEditModal();
            }
        });
    </script>
</body>
</html>